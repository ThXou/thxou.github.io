<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS @ca | Luis Cardenas ThXou]]></title>
  <link href="http://ThXou.github.io/blog/categories/ios-at-ca/atom.xml" rel="self"/>
  <link href="http://ThXou.github.io/"/>
  <updated>2014-01-28T00:48:09+01:00</updated>
  <id>http://ThXou.github.io/</id>
  <author>
    <name><![CDATA[Luis Cardenas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS: Usant NSUserDefaults Per Assignar Configuracions Per Defecte]]></title>
    <link href="http://ThXou.github.io/2012/10/25/ios-usant-nsuserdefaults-per-assignar-configuracions-per-defecte/"/>
    <updated>2012-10-25T14:06:57+02:00</updated>
    <id>http://ThXou.github.io/2012/10/25/ios-usant-nsuserdefaults-per-assignar-configuracions-per-defecte</id>
    <content type="html"><![CDATA[<p style="text-align: center;"><a href="http://www.thxou.com/wp-content/uploads/2012/07/photo-1.png"><img title="MyDefaults-thxou.com" src="http://www.thxou.com/wp-content/uploads/2012/07/photo-1-200x300.png" alt="" width="200" height="300" /></a><a href="http://www.thxou.com/wp-content/uploads/2012/07/photo-1.png">
</a></p>


<p style="text-align: left;">Cada aplicació té un sistema d'emmagatzematge per defecte per a cada usuari anomenat <strong>User Default System</strong> (Des d'ara UDS), el qual està compost per una base de dades en la qual, a través d'uns paràmetres i mètodes, podem emmagatzemar i recuperar certs valors, que solen ser petites quantitats de dades que usem comunament en la nostra aplicació. A aquests valors per defecte se'ls crida: preferències de l'usuari. Per exemple, podríem voler permetre-li als usuaris triar cuan periòdicament sincronitzar certes dades amb iCloud, aquest valor de temps ho podem emmagatzemar en el UDS i recuperar-ho a l'inici de l'aplicació.</p>


<p>Podem classificar les preferències d'usuari en 2 categories: les que canvien freqüentment i les que no. En aquesta oportunitat treballarem amb les quals canvien freqüentment, l'altra categoria la veurem en articles posteriors ja que requereix una mica més de profunditat.</p>

<p>La classe <code>NSUserDefaults</code> ens permet interactuar amb el UDS, proveint diversos mètodes per guardar i recuperar dades des d'aquesta base de dades per defecte.</p>

<h2 dir="ltr">Algunes característiques d'aquesta classe</h2>


<p dir="ltr">Solament existeix una única instància d'aquesta classe per aplicació.</p>


<p>Un avantatge és l'emmagatzematge en caché de la informació. Un sistema com aquest implicaria obrir la base de dades constantment, en concret cada vegada que l'usuari demani informació. Per evitar aquesta constant obertura, la classe emmagatzema les dades en caché. El mètode <code>synchronize</code> és invocat periòdicament i s'encarrega d'escriure les dades noves en caché i d'actualitzar els ja existents, i això ho fa de forma transparent a l'usuari. No obstant això si no desitges esperar a la sincronització automàtica, pots usar aquest mètode per actualitzar les dades immediatament, anant amb compte de cridar-ho només quan hagis fet alguna modificació. Així ens evitem una sobrecàrrega de connexions amb la base de dades.</p>

<p>Un altre punt important a tenir en compte és que tots els valors retornats des de la base de dades són immutables (és a dir, que no es poden modificar), fins i tot encara que guardessis un valor mutable (per exemple una instància de <code>NSMutableString</code>), en retornar-ho a l'usuari seria immutable.</p>

<h2 dir="ltr">Obtenint i escrivint dades</h2>


<p>Explicaré millor el tema amb una mini aplicació que he fet cridada <em>MyDefaults</em>. Aquesta aplicació té certes característiques que mostrar com: l'hora actual a intervals de temps, un missatge de benvinguda a l'inici i la data i hora de l'última vegada que es va obrir l'aplicació. La primera dada que guardarem serà de tipus <code>float</code> i serà l'interval en segons en el qual es va a actualitzar l'hora; el segon és de tipus booleà, ens permetrà definir si volem, o no, mostrar el missatge de benvinguda; el tercer és un string que conté el nostre nom per mostrar-ho en el missatge de benvinguda i en la vista principal; i el quart és de tipus <code>NSDate</code> per a l'última visita. Podrem personalitzar cadascun d'aquests valors des d'una finestra modal cridada: Preferències.</p>

<p>Per interactuar amb les dades de la base de dades, <code>NSUserDefaults</code> posa a la nostra disposició una sèrie de mètodes de conveniència. Ara, quines dades se'ns permet guardar i obtenir?, concretament els mateixos que en una Property List: <code>NSString</code>, <code>NSNumber</code> (booleans, integers, floats i doubles), <code>NSDate</code>, <code>NSArray</code> o <code>NSDictionary</code>. Per a tipus diferents a aquests podem arxivar-los amb <code>NSData</code>, que també ens permet dades d'aquest tipus.</p>

<p>Com he dit abans, solament hi ha una instància d'aquesta classe per aplicació, així que per accedir a ella usem el mètode de classe <code>standardUserDefaults</code>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">defaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Ja tenim la nostra instància de la classe, per tant ja podem obtenir i guardar dades. Això ho fem usant els mètodes de conveniència dels quals vaig parlar anteriorment (Al final d'aquest article hi ha enllaços cap a la documentació per veure la relació sencera de mètodes disponibles). Nosaltres anem a obtenir i a mostrar aquests valors en iniciar el controlador <em>ViewController</em> en el mètode <code>viewDidLoad:</code>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">defaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// obtenim el nom des de la base de dades</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">nombre</span> <span class="o">=</span> <span class="p">[</span><span class="n">defaults</span> <span class="nl">stringForKey:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">kMiNombre</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// vam mostrar el missatge de benvinguda amb el nom si el valor de la base de dades ens ho permet</span>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">mostrarMensaje</span> <span class="o">=</span> <span class="p">[</span><span class="n">defaults</span> <span class="nl">boolForKey:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">kMostrarMensaje</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">(</span><span class="n">mostrarMensaje</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">UIAlertView</span> <span class="o">*</span><span class="n">mensaje</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIAlertView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTitle:</span><span class="s">@&quot;MyDefaults&quot;</span>
</span><span class='line'>                                                  <span class="nl">message:</span><span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;Hola %@, bienvenido a MyDefaults&quot;</span><span class="p">,</span> <span class="n">nombre</span><span class="p">]</span>
</span><span class='line'>                                                 <span class="nl">delegate:</span><span class="n">self</span>
</span><span class='line'>                                        <span class="nl">cancelButtonTitle:</span><span class="s">@&quot;Ok&quot;</span>
</span><span class='line'>                                        <span class="nl">otherButtonTitles:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">mensaje</span> <span class="n">show</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">mensaje</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// obtenim la data de la ultima visita</span>
</span><span class='line'><span class="n">NSDate</span> <span class="o">*</span><span class="n">ultimaVisita</span> <span class="o">=</span> <span class="p">[</span><span class="n">defaults</span> <span class="nl">objectForKey:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">kUltimaVisita</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// com a aquesta key li assignem per defecte nil, comprovem que no sigui (osigui que hi hagi alguna data), en cas contrari vam mostrar un missatge alternatiu</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">ultimaVisita</span> <span class="o">!=</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// formatem la data i hora obtinguda de la base de dades</span>
</span><span class='line'><span class="n">NSDateFormatter</span> <span class="o">*</span><span class="n">formatter</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSDateFormatter</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">formatter</span> <span class="nl">setDateStyle:</span><span class="n">NSDateFormatterMediumStyle</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">formatter</span> <span class="nl">setTimeStyle:</span><span class="n">NSDateFormatterMediumStyle</span><span class="p">];</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">lblVisita</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="p">[</span><span class="n">formatter</span> <span class="nl">stringFromDate:</span><span class="n">ultimaVisita</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">formatter</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span><span class='line'><span class="k">else</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">self</span><span class="p">.</span><span class="n">lblVisita</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;Hola, esta es la primera vez que accedes : )&quot;</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// guardem la data de l&#39;última visita</span>
</span><span class='line'><span class="p">[</span><span class="n">defaults</span> <span class="nl">setObject:</span><span class="p">[</span><span class="n">NSDate</span> <span class="n">date</span><span class="p">]</span> <span class="nl">forKey:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">kUltimaVisita</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span>
</span><span class='line'><span class="p">[</span><span class="n">defaults</span> <span class="n">synchronize</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Com poden observar aquests mètodes són molt intuïtius i són de la forma:<strong><em> </em></strong><code><strong><em>tipus</em></strong>ForKey:</code>. On <strong>tipus</strong> és el tipus de dada que vols obtenir, en el nostre cas és <code>float</code>, <code>bool</code>, <code>string</code> i <code>object</code> (pel de tipus <code>NSDate</code>). Les <em>Keys</em>, són simples strings que identifiquen a un valor en concret dins de la base de dades i no poden haver-hi 2 iguals. Jo he usat uns quants objectes <code>UILabel</code> connectats amb el Interface Builder per mostrar aquestes dades d'una millor manera, com també he usat la classe <code>NSDateFormatter</code> per donar format a la data que ve des de la base de dades en cas que ja s'hagi guardat alguna abans. Els comentaris en verd t'ajudaran a entendre millor cada part del codi.</p>

<p>Si van una mica més a baix en el codi veuran que hi ha un mètode anomenat <code>viewWillApperar:</code>, aquest mètode és llançat quan la pantalla és a punt de ser mostrada. En aquest mètode usem un objecte <code>NSTimer</code> per programar l'actualització de l'hora a l'interval de temps que hem obtingut de la base de dades.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">defaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// Carreguem el valor de l&#39;hora. Usarem un timer per actualitzar l&#39;hora cada x temps</span>
</span><span class='line'><span class="n">NSTimeInterval</span> <span class="n">interval</span> <span class="o">=</span> <span class="p">[</span><span class="n">defaults</span> <span class="nl">floatForKey:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">kIntervaloHora</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// posem el timer en funcionament i s&#39;actualitzarà cada &amp;ldquo;interval&amp;rdquo; segons</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">timer</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimer</span> <span class="nl">scheduledTimerWithTimeInterval:</span><span class="n">interval</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                                          <span class="nl">target:</span><span class="n">self</span>
</span><span class='line'>                                        <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">actualizaHora</span><span class="p">)</span>
</span><span class='line'>                                        <span class="nl">userInfo:</span><span class="nb">nil</span>
</span><span class='line'>                                         <span class="nl">repeats:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Ja tenim les dades mostrades en la UI (Interfície d'Usuari) per fer tots els canvis que vam crear convenients (Fes-los!) i després guardar-los. Per a això anem al controlador <em>SettingsViewController</em> i aquí trobarem el mètode <code>guardar:</code>, el qual, accionat pel botó <strong>Guardar</strong> de la barra d'eines, ens guardarà les dades en la *caché per després sincronitzar-los, a través del mètode <code>syncronize</code>, amb la base de dades:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nl">guardar:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sender</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">defaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Guardem el *intérvalo d&#39;actualització de l&#39;hora</span>
</span><span class='line'><span class="p">[</span><span class="n">defaults</span> <span class="nl">setFloat:</span><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">txtHora</span><span class="p">.</span><span class="n">text</span> <span class="n">floatValue</span><span class="p">]</span> <span class="nl">forKey:</span><span class="s">@&quot;kIntervaloHora&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Guardem l&#39;estat del UISwitch com un booleà</span>
</span><span class='line'><span class="p">[</span><span class="n">defaults</span> <span class="nl">setBool:</span><span class="n">self</span><span class="p">.</span><span class="n">switchMsg</span><span class="p">.</span><span class="n">on</span> <span class="nl">forKey:</span><span class="s">@&quot;kMostrarMensaje&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Guardem el nom que hem definit</span>
</span><span class='line'><span class="p">[</span><span class="n">defaults</span> <span class="nl">setObject:</span><span class="n">self</span><span class="p">.</span><span class="n">txtNombre</span><span class="p">.</span><span class="n">text</span> <span class="nl">forKey:</span><span class="s">@&quot;kMiNombre&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// sincronitzem la caché i la base de dades</span>
</span><span class='line'><span class="p">[</span><span class="n">defaults</span> <span class="n">synchronize</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// tanquem la finestra modal</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span> <span class="nl">dismissModalViewControllerAnimated:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Aquí usem novament mètodes de conveniència, els quals tenen la forma: <code>set<em><strong>Tipus</strong></em>:forKey:</code>, on <strong>tipus</strong> pot ser dels tipus escalessis (<code>integer</code>, <code>float</code>, <code>bool</code> o <code>double</code>), <code>NSUrl</code> u <code>object</code> per a qualsevol altre tipus d'objecte dels esmentats més amunt.</p>

<p>Si ens fixem, també tenim redefinit el mètode <code>viewDidLoad:</code> com va passar en el controlador de la pantalla principal. Fem el mateix, carregar les dades guardades per mostrar-los en la pantalla de preferències.</p>

<h2>Registrant preferències per defecte</h2>


<p>Això seria tot pel que fa a guardar i obtenir dades de la base de dades del <strong>User Default System</strong>. No obstant això he volgut explicar breument com registrar preferències per defecte per a la nostra aplicació. Per exemple si és la primera vegada que l'executem, probablement ens agradaria que la base de dades ja tingui uns valors emmagatzemats per defecte. Això ho fem en el mètode <code>application:didFinishLaunchingWithOptions:</code> del controlador principal <em>AppDelegate</em>, que és cridat immediatament després d'acabar de carregar l'aplicació:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">defaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">[</span><span class="n">defaults</span> <span class="nl">boolForKey:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">kValoresGuardados</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;])</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">defaultValues</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObjectsAndKeys:</span>
</span><span class='line'>                               <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithFloat:</span><span class="mf">1.0</span><span class="p">],</span> <span class="s">@&quot;kIntervaloHora&quot;</span><span class="p">,</span>
</span><span class='line'>                               <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithBool:</span><span class="n">YES</span><span class="p">],</span> <span class="s">@&quot;kMostrarMensaje&quot;</span><span class="p">,</span>
</span><span class='line'>                               <span class="s">@&quot;ThXou&quot;</span><span class="p">,</span> <span class="s">@&quot;kMiNombre&quot;</span><span class="p">,</span>
</span><span class='line'>                               <span class="nb">nil</span><span class="p">,</span> <span class="s">@&quot;kUltimaVisita&quot;</span><span class="p">,</span>
</span><span class='line'>                               <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithBool:</span><span class="n">YES</span><span class="p">],</span> <span class="s">@&quot;kValoresGuardados&quot;</span><span class="p">,</span>
</span><span class='line'>                               <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">defaults</span> <span class="nl">registerDefaults:</span><span class="n">defaultValues</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Al mètode <code>registerDefaults:</code> li passem un diccionari amb els valors i les <em>keys</em> que volem tenir per defecte en la nostra base de dades a l'inici de l'aplicació. És important tenir en compte que per als valors de tipus escalar hem d'usar instàncies de <code>NSNumber</code> com es pot observar en el codi. He afegit una nova <em>key </em>cridada <code>kValoresGuardados</code> per evitar que ens torni a guardar aquests mateixos valors cada vegada que iniciem l'aplicació i que solament ho faci la primera vegada.</p>

<h2>I ara que?</h2>


<p>Avui hem après a usar la classe <code>NSUserDefaults</code> para a assignar preferències i configuracions per defecte per a la nostra aplicació, així com una sèrie de mètodes per interactuar amb el <strong>User Default System</strong>. Per continuar aprenent sobre aquest tema et recomano que et passis per <a href="http://developer.apple.com/library/ios/#DOCUMENTATION/Cocoa/Reference/Foundation/Classes/NSUserDefaults_Class/Reference/Reference.html">la documentació d'Apple</a> sobre aquesta classe i facis totes les proves possibles fins que entenguis correctament el seu funcionament.</p>

<p style="text-align: center;"><a href="http://securelink.thxou.com/?https://www.box.com/s/9bfb660d5c26adf2f1c1"><img class="alignnone size-full wp-image-2134" title="boton-thxou.com" src="http://www.thxou.com/wp-content/uploads/2011/11/boton-thxou.png" alt="" width="256" height="52" /></a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS: Aprenent Sobre Delegació, Protocols I La Classe UIAlertView]]></title>
    <link href="http://ThXou.github.io/2012/10/19/ios-aprenent-sobre-delegacio-protocols-i-la-classe-uialertview/"/>
    <updated>2012-10-19T09:39:25+02:00</updated>
    <id>http://ThXou.github.io/2012/10/19/ios-aprenent-sobre-delegacio-protocols-i-la-classe-uialertview</id>
    <content type="html"><![CDATA[<p>En aquesta ocasió he volgut parlar sobre la delegació, un patró molt comú en Cocoa Touch que a molts principiants se'ns pot ennuegar, com ha estat el meu cas. És en si un concepte molt senzill d'entendre, però és clar, depenent de qui t'ho expliqui. Espero explicar-ho ben perquè tots el puguin entendre, si no és així, digueu-m'ho en els comentaris.</p>

<p>El concepte delegació en Cocoa Touch es refereix específicament al fet que la teva &ldquo;delegues&rdquo; a un objecte i ho dotes amb la capacitat de respondre a certs esdeveniments ocorreguts en un altre objecte en particular. Aquest concepte és fàcilment comprensible si ho mires des del punt de vista de la necessitat que hi ha que &ldquo;algú&rdquo; hagi de rebre i manipular la informació de certs esdeveniments en certs objectes. Un exemple clar ho veiem en el GPS. Com podem saber si el GPS ja va trobar la nostra localització?, la informació retornada pel GPS està allí, però algú ha de rebre-la i treballar amb ella per poder mostrar aquesta localització. Doncs, aquest algú és el delegat. El procés de delegació es fa a través de la propietat <code>delegate</code>. Aquesta propietat no és comuna en totes les classes, solament algunes com <code>UIAccelerometer</code>, <code>UIActionSheet</code>, <code>CLLocationManager</code>, etc. la tenen ja que emeten missatges per als seus esdeveniments. Llavors, assignem a la propietat <code>delegate</code> d'un objecte la classe que volem que sigui l'encarregada de manipular els esdeveniments d'aquest objecte i llest, el delegat ja està preparat per rebre'ls i manipular-los.</p>

<p>Els esdeveniments estan representats en codi a través de funcions (Mètodes) les quals són cridades cada vegada que l'esdeveniment ocorre. L'objecte delegat s'encarrega d'implementar aquestes funcions per a la quantitat d'esdeveniments que s'envien depenent de cada objecte. Cada objecte delegat solament pot rebre missatges per a esdeveniments d'un sol objecte en particular, i aquests poden ser més d'un.</p>

<h2>Aplicació pràctica</h2>


<p>Ben. Seguint amb la meva idea que tot s'aprèn millor si ho portem a la pràctica, he desenvolupat una petita aplicació que utilitza la classe <code>UIAlertView</code> per mostrar una finestra com la qual vam veure en <a href="http://www.thxou.com/2012/01/31/programando-notificaciones-locales-con-uilocalnotification/">l'entrada anterior sobre notificacions locals</a>. Aquesta finestra té uns botons, en pressionar-los s'altera el text que hi ha en una etiqueta (<code>UILabel</code>) que està en la vista principal. Així de senzill.</p>

<p>La classe <code>UIAlertView</code> ens permet representar una finestra d'alerta en una vista en concret i ho fem així:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">UIAlertView</span> <span class="o">*</span><span class="n">ventana</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIAlertView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTitle:</span><span class="s">@&quot;Mi Ventana&quot;</span>
</span><span class='line'>                                                  <span class="nl">message:</span><span class="s">@&quot;Aprendiendo sobre delegación en thxou.com&quot;</span>
</span><span class='line'>                                                 <span class="nl">delegate:</span><span class="n">self</span>
</span><span class='line'>                                        <span class="nl">cancelButtonTitle:</span><span class="s">@&quot;Cancelar&quot;</span>
</span><span class='line'>                                        <span class="nl">otherButtonTitles:</span><span class="s">@&quot;Limpiar Etiqueta!&quot;</span><span class="p">,</span> <span class="s">@&quot;Opción 1&quot;</span><span class="p">,</span> <span class="s">@&quot;Opción 2&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>El mètode <code>initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles</code> s'encarrega de crear l'objecte anomenat <code>ventana</code>, que és una instància de <code>UIAlertView</code>, amb una informació per defecte. Doncs bé, finestra té botons i en pressionar-los s'envia el missatge <code>alertView:clickedButtonAtIndex:</code>.Quan aquest missatge és enviat s'executa el comportament per defecte que és simplement tancar la finestra d'alerta.</p>

<p>Anem a fixar-nos en l'etiqueta <code>delegate:</code> del mètode en el codi d'a dalt. Sabem que prémer un botó en la finestra és un esdeveniment que dispara el missatge<code> alertView:clickedButtonAtIndex:</code>. Bé, en assignar <code>self</code> a l'etiqueta <code>delegate:</code>, li estem dient a finestra com va a ser l'encarregat de gestionar els seus esdeveniments, en el nostre cas (I com veureu en la majoria dels casos) és <code>self</code>, la nostra mateixa classe <em>ViewController</em>.</p>

<p>Veurem que en la majoria dels casos el delegat és assignat d'aquesta manera:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">objeto</span> <span class="nl">setDelegate:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'><span class="c1">//O también</span>
</span><span class='line'><span class="n">objeto</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Aquest codi compleix la mateixa funció que en el nostre exemple.</p>

<p>Ja que no volem que en pressionar els botons s'executi el comportament per defecte, la nostra classe <code>ViewController</code> necessita implementar aquest mètode disparat per l'esdeveniment i així li diem a finestra que fer quan es pressioni un botó.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">alertView:</span><span class="p">(</span><span class="n">UIAlertView</span> <span class="o">*</span><span class="p">)</span><span class="n">alertView</span> <span class="nl">clickedButtonAtIndex:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="n">buttonIndex</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">switch</span> <span class="p">(</span><span class="n">buttonIndex</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">mensaje</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">mensaje</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;Haz seleccionado la opción 1&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">mensaje</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;Haz seleccionado la opción 2&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="k">default</span><span class="o">:</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>La variable <code>buttonIndex</code> conté els índexs per a cadascun dels botons que conté la finestra d'alerta. Així que podem fer coses diferents depenent del &ldquo;cas&rdquo;.</p>

<p>Aquest mètode, com ja hem explicat, no és del nostre delegat, simplement estem habilitats per personalitzar la resposta a un esdeveniment usant aquest mètode, però no ho vam crear nosaltres ni definim la capçalera del mètode. Per tant el compilador ens va a llançar una excepció al moment de compilar el codi i l'aplicació petará. Per evitar això, hem de fer que el nostre delegat &ldquo;sigui conforme&rdquo; al protocol on està definit aquest mètode (relacionat a un esdeveniment) i tots els disparats per la finestra d'alerta.</p>

<p style="text-align: center;"><a href="http://www.thxou.com/wp-content/uploads/2012/04/grafic-delegation.png"><img class=" wp-image-2185 aligncenter" title="grafic-delegation" src="http://www.thxou.com/wp-content/uploads/2012/04/grafic-delegation.png" alt="" width="463" height="248" /></a></p>


<p style="text-align: center;"><small>Representació del patró delegate</small></p>




<h2>Que passa amb els protocols?</h2>


<p>Els protocols són <strong>simples llistes de mètodes sense implementar</strong>. No són classes, però si hereten de classes, tampoc podem fer instàncies d'ells ni crear variables d'instància dins d'ells. Els seus mètodes són implementats en les classes que &ldquo;són conformes&rdquo; a aquest protocol. Un protocol delegat és aquell usat per a la delegació, i en el nostre cas anem a necessitar el protocol delegat de <code>UIAlertView</code> que implementa el mètode <code>alertView:clickedButtonAtIndex:</code>, i est és: <code>UIAlertViewDelegate</code>. Quan ocorre un esdeveniment en l'objecte, s'envia el missatge corresponent del protocol delegat.</p>

<p>En un <strong>protocol delegat</strong> podem trobar-nos 2 tipus de mètodes. Uns manipulen actualitzacions d'informació, com per exemple en el cas del GPS al principi, la localització serà diferent sempre que et moguis, per tant el mètode retornarà informació diferent cada vegada; I uns altres, s'envien com a respostes a entrades de l'usuari, com en el nostre cas, quan l'usuari prem un botó de la finestra d'alerta. Hi ha alguns mètodes que podrien entrar en una tercera categoria, i és el cas de <code>alertViewShouldEnableFirstOtherButton:</code>. En aquest mètode, la finestra d'alerta pregunta al delegat si ha de mostrar habilitat o deshabilitat el primer dels botons. La resposta del delegat pot ser simplement <code>YES</code> o <code>NO</code>. En el nostre cas he posat <code>NO</code>, perquè vegis el comportament que té aquest mètode.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nl">alertViewShouldEnableFirstOtherButton:</span><span class="p">(</span><span class="n">UIAlertView</span> <span class="o">*</span><span class="p">)</span><span class="n">alertView</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">return</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Ja solament ens queda fer que el nostre delegat &ldquo;sigui conforme&rdquo; a <code>UIAlertViewDelegate</code>. Això ho fem en la capçalera de la nostra classe <em>ViewController.h</em> a la declaració <code>@interface</code>, entre signes de major i menor.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">UIAlertViewDelegate</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">@private</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">UILabel</span> <span class="o">*</span><span class="n">mensaje</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>He creat missatge, que és un objecte <code>UILabel</code>, per mostrar missatges depenent que botó ha estat premut.</p>

<p>Llest, ja hem acabat. Jo et recomano que analitzis el codi i facis canvis, molts canvis, perquè vegis com funciona la classe i el seu protocol delegat. Trobaràs enllaços a la documentació d'Apple sobre aquest tema més a baix. En aquesta mateixa aplicació d'exemple intenta afegir més mètodes de <code>UIAlertViewDelegate</code> i així saber com funcionen.</p>

<p>Espero haver-te ajudat a comprendre aquest tema. Qualsevol dubte o suggeriment utilitza els comentaris.</p>

<p><a href="http://developer.apple.com/library/ios/#DOCUMENTATION/UIKit/Reference/UIAlertView_Class/UIAlertView/UIAlertView.html">UIAlertView</a> | <a href="http://developer.apple.com/library/ios/#DOCUMENTATION/UIKit/Reference/UIAlertViewDelegate_Protocol/UIAlertViewDelegate/UIAlertViewDelegate.html">UIAlertViewDelegate</a></p>

<p style="text-align: center;"><a href="http://securelink.thxou.com/?https://www.box.com/s/7f6fa46bc386d08c6100"><img class="alignnone size-full wp-image-2134" title="boton-thxou.com" src="http://www.thxou.com/wp-content/uploads/2011/11/boton-thxou.png" alt="" width="256" height="52" /></a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS: Programant Notificacions Locals Amb UILocalNotification]]></title>
    <link href="http://ThXou.github.io/2012/10/18/ios-programant-notificacions-locals-amb-uilocalnotification/"/>
    <updated>2012-10-18T13:21:05+02:00</updated>
    <id>http://ThXou.github.io/2012/10/18/ios-programant-notificacions-locals-amb-uilocalnotification</id>
    <content type="html"><![CDATA[<p><img class="alignright" title="notifyme-thxou.com" src="http://www.thxou.com/wp-content/uploads/2012/01/Screen-shot-2012-01-30-at-20.05.49.png" alt="" width="310" height="264" />Aquí estem una altra vegada amb un nou tutorial. Aquesta vegada intentaré explicar-los de manera teòrica i pràctica el procés per programar una notificació local. És relativament senzill d'implementar i hi ha poques opcions que configurar.</p>

<p>La classe <code>UILocalNotification</code> et permet representar notificacions locals com la de la imatge (similars a les notificacions Push que treballen amb un servidor extern. No parlarem d'això ara), que la teva aplicació podria programar perquè siguin presentades als teus usuaris en una data i hora determinades. El sistema operatiu és l'encarregat de gestionar aquestes notificacions i <strong>permet programar fins a 64 notificacions per aplicació</strong>.</p>

<p><code>UILocalNotification</code> adopta el protocol <code>NSCopying</code>, i una dels seus avantatges és que ens permet copiar notificacions ja programades, també modificar-les i cancel·lar-les. Tot en el quadre de notificació, excepte el color, es pot personalitzar al complet: pots definir un títol, el text de la notificació, quants botons va a tenir, un so personalitzat el qual es reprodueixi en mostrar-se, etc. Totes aquestes opcions les anem a aprendre a configurar nosaltres mateixos a continuació amb un exemple pràctic.</p>

<h2>Portant-ho a la pràctica</h2>


<p>He creat una altra mini-app trucada <em>notifyme</em> que et pots descarregar des del botó enorme del final d'aquest article (Molt recomanat descarregar-la i seguir el toturial amb ella). El que vas a aprendre amb aquesta app és a programar una notificació local amb configuracions personalitzades i rebre un text juntament amb la notificació per mostrar-la a l'usuari, en aquest cas, la mostrarem en un quadre de text de la pantalla principal, però també es podria mostrar com una alerta.</p>

<p>Obrim l'aplicació en*Xcode i en el <em>Project Navigator</em> podem veure el nostre controlador de l'aplicació: AppDelegate.h i .m, i també el controlador de la vista principal ViewController.h i .m. Obrim el ViewController.m i ens anem al mètode:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">programarNotificacion</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">UILocalNotification</span> <span class="o">*</span><span class="n">localNot</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UILocalNotification</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">localNot</span><span class="p">.</span><span class="n">fireDate</span> <span class="o">=</span> <span class="p">[</span><span class="n">pickerCaducidad</span> <span class="n">date</span><span class="p">];</span>
</span><span class='line'><span class="n">localNot</span><span class="p">.</span><span class="n">timeZone</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimeZone</span> <span class="n">defaultTimeZone</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">localNot</span><span class="p">.</span><span class="n">alertBody</span> <span class="o">=</span> <span class="s">@&quot;Mi primera notificación&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">localNot</span><span class="p">.</span><span class="n">alertAction</span> <span class="o">=</span> <span class="s">@&quot;Mostrar&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">localNot</span><span class="p">.</span><span class="n">soundName</span> <span class="o">=</span> <span class="n">UILocalNotificationDefaultSoundName</span><span class="p">;</span>
</span><span class='line'><span class="n">localNot</span><span class="p">.</span><span class="n">applicationIconBadgeNumber</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">userDict</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObject:</span><span class="n">textoNotificacion</span><span class="p">.</span><span class="n">text</span> <span class="nl">forKey:</span><span class="n">kNotificationTextKey</span><span class="p">];</span>
</span><span class='line'><span class="n">localNot</span><span class="p">.</span><span class="n">userInfo</span> <span class="o">=</span> <span class="n">userDict</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">]</span> <span class="nl">scheduleLocalNotification:</span><span class="n">localNot</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">localNot</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Aquest mètode és la part principal de la nostra aplicació ja que és el que va a programar la notificació, així que vaig a explicar-los les parts que ho componen i la seva configuració.</p>

<p>Com ja sabem, per treballar amb classes cal fer-ho a través d'objectes, i aquests objectes els vam crear a través d'instàncies de classes, així que el que fem primer és crear una instància de la classe <code>UILocalNotification</code> trucada &ldquo;<em>localNot</em>&rdquo;. Aquesta instància va a representar aquesta notificació en la cua de notificacions del sistema operatiu. Bé, aquest objecte té les següents propietats:</p>

<ul>
    <li><strong>fireDate:</strong> La data i hora exacta en la qual desitgem mostrar la notificació.</li>
    <li><strong>timeZone:</strong> Treballa juntament amb <code>fireDate</code> i serveix perquè la notificació es mostri adaptada per a una zona horària específica. Nosaltres usem <code>defaultTimeZone</code> que utilitza la zona horària de l'aplicació.</li>
    <li><strong>alertBody:</strong> És el cos del missatge que es mostra juntament amb la notificació.</li>
    <li><strong>alertAction:</strong> És el text del botó d'acció. En la imatge diu "Mostrar" i en prémer-ho va a obrir l'aplicació.</li>
    <li><strong>soundName:</strong> El so personalitzat que vols que es reprodueixi en mostrar-se la notificació. <code>UILocalNotificationDefaultSoundName</code> especifica el so per defecte del sistema, però podem posar el que nosaltres vulguem, sempre que duri <strong>30 segons</strong> i siguin de format <code>aiff</code>, <code>wav</code> o <code>caf</code>.</li>
    <li><strong>applicationIconBadgeNumber:</strong> Si us heu fixat, hi ha aplicacions que mostren un circulo vermell en la part superior dreta de la icona de la app. A això es refereix aquesta propietat. És un enter de tipus <code>NSInteger</code> al que podem assignar-li un nombre.</li>
    <li><strong>userInfo:</strong> Aquesta propietat és un diccionari tipus <code>NSDictionary</code>, en la qual podem guardar informació per després recuperar-la quan es mostri nostra app després de pressionar el botó d'acció.</li>
</ul>


<p>Existeixen altres propietats més, a part de les usades en aquesta aplicació, algunes una mica menys importants però que te les explico en una línia:</p>

<ul>
    <li><strong>repeatInterval:</strong> Serveix per reprogramar la notificació en un interval de temps específic.</li>
    <li><strong>repeatCalendar:</strong> El calendari en el qual l'aplicació es basarà per reprogramar la notificació.</li>
    <li><strong>hasAction:</strong> És un propietat de tipus <code>BOOL</code>, que especifica si es mostra o no el botó d'acció.</li>
    <li><strong>alertLaunchImage:</strong> La imatge que es mostra immediatament quan es pressiona el botó d'acció.</li>
</ul>


<p>Aquí cal explicar una mica el camp <code>userInfo</code>. Jo he creat una constant a la qual he cridat <code>kNotificationTextKey</code> per usar-la com el text que vull que acompanyi a la notificació. L'he declarat en el AppDelegate.h i després assignat un string que és el nom amb el qual es guardarà juntament amb l'aplicació. També l'he declarat com <code>extern</code>, perquè estigui disponible anés de la classe AppDelegate. Com podeu veure, el valor d'aquesta constant és el que escrivim en el <code>UITextField</code> de la interfície gràfica (<code>textoNotificacion</code>).</p>

<p>Explicat això, és el moment d'enviar la notificació (el nostre objecte <code>localNot</code>) al sistema operatiu perquè la gestioni. Per a això utilitzem un mètode de la classe <code>UIApplication</code> anomenat <code>scheduleLocalNotification:localNot</code>. Aquest mètode utilitza el valor del camp <code>fireDate</code> per programar la notificació i que es mostri en una data i hora concretes. Un altre mètode que també interessa és <code>presentLocalNotificationNow:</code>, el qual mostra la notificació immediatament per pantalla.</p>

<p>En aquest mateix arxiu podem veure el mètode: <code>&ndash;(IBAction)prepararNotificacion:(id)sender</code>. El que va a fer és, a part d'executar el mètode d'a dalt, cancel·lar totes les notificacions programades anteriorment utilitzant el mètode de <code>UIApplication</code> anomenat <code>cancelAllLocalNotifications</code>. Si per contra, solament volem fer-ho per a una notificació específica utilitzarem <code>cancelLocalNotification:localNot</code>.</p>

<h2>Mostrant la notificació</h2>


<p>Val, ja hem programat  la notificació, ara ens toca rebre i manipular la informació que porta amb si la notificació quan es mostra, així podem personalitzar-la més al nostre gust. Hi ha 2 estats en els quals podria trobar-se l'aplicació en rebre la notificació: quan està visible i quan està tancada. Com ja sabem, en pressionar en el botó d'acció (o lliscar el dit quan el dispositiu està bloquejat) s'obre l'aplicació, en obrir-se, depenent d'en qual d'aquests 2 estats es troba, s'executen 2 mètodes de <code>UIApplication</code>. Aquests mètodes els podem trobar ja implementats en l'arxiu del controlador principal de l'aplicació AppDelegate.m. Si l'aplicació no està visible s'executa el mètode <code>application:didFinishLaunchingWithOptions:</code>. El següent codi és el que he afegit al predeterminat per manipular les dades de la notificació:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// Notificacions</span>
</span><span class='line'><span class="n">application</span><span class="p">.</span><span class="n">applicationIconBadgeNumber</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">UILocalNotification</span> <span class="o">*</span><span class="n">notification</span> <span class="o">=</span> <span class="p">[</span><span class="n">launchOptions</span> <span class="nl">objectForKey:</span>
</span><span class='line'>                                     <span class="n">UIApplicationLaunchOptionsLocalNotificationKey</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">notification</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">reminderText</span> <span class="o">=</span> <span class="p">[</span><span class="n">notification</span><span class="p">.</span><span class="n">userInfo</span>
</span><span class='line'>                              <span class="nl">objectForKey:</span><span class="n">kNotificationTextKey</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_viewController</span> <span class="nl">despliegaNotificacion:</span><span class="n">reminderText</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Nota que el mètode té un paràmetre anomenat <code>launchOptions</code>. Aquest paràmetre és un diccionari (<code>NSDictionary</code>) que porta amb si informació sobre el perquè que s'hagi obert l'aplicació. En aquest cas, quan un dels motius és una notificació, aquesta es guarda en una constant del sistema designada per a això: <code>UIApplicationLaunchOptionsLocalNotificationKey</code>. Si aquesta constant conté la notificació, llavors est ha estat el motiu de la seva obertura, així que guardem aquesta notificació en un punter que hem cridat &ldquo;*notification&rdquo;. Si us acordeu, abans guardem un text en la constant <code>kNotificationTextKey</code>, per la qual cosa ara ho recuperem en el string <code>reminderText</code>.</p>

<p>Si es dóna l'altre cas, en el qual l'aplicació està visible llavors s'executa un altre mètode de <code>UIApplication</code> anomenat <code>application:didReceiveLocalNotification:</code>. No es mostren alertes ni es reprodueixen sons, però si es pot tractar amb la informació que ve amb la notificació:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">application:</span><span class="p">(</span><span class="n">UIApplication</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">application</span> <span class="nl">didReceiveLocalNotification:</span><span class="p">(</span><span class="n">UILocalNotification</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">notification</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">application</span><span class="p">.</span><span class="n">applicationIconBadgeNumber</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">reminderText</span> <span class="o">=</span> <span class="p">[</span><span class="n">notification</span><span class="p">.</span><span class="n">userInfo</span>
</span><span class='line'>                          <span class="nl">objectForKey:</span><span class="n">kNotificationTextKey</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">_viewController</span> <span class="nl">despliegaNotificacion:</span><span class="n">reminderText</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Aquí fem similar a l'anterior mètode. Llevem el <code>badgeNumber</code> i després recuperem el text de la constant <code>kNotificationTextKey</code> en el string <code>reminderText</code>.</p>

<p>No obstant això, i per finalitzar, la següent línia:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="p">[</span><span class="n">_viewController</span> <span class="nl">despliegaNotificacion:</span><span class="n">reminderText</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Utilitza l'objecte <code>_viewController</code>, creat automàticament per Xcode en crear un nou projecte, per comunicar-se amb el controlador de la nostra vista principal (ViewController.h i .m), la classe de la qual té implementat el mètode <code>despliegaNotificacion:</code>, tot això amb la finalitat de mostrar-nos el text recuperat en <code>reminderText</code> en la pantalla principal.</p>

<p>Engeguin l'aplicació per veure-la en funcionament. No temes canviar el codi i provar les teves pròpies idees. Fes-ho, i si surt malament llavors aprèn dels teus errors. Si bé és cert aquest tutorial es va poder haver fet en menys paraules, he volgut detallar-ho perquè puguin comprendre realment com funciona. Si em deixo alguna cosa, o dic alguna cosa en el que m'estic equivocant, agrairia molt el vostre feedback :). Gaudeixin i comparteixin aquest article. Fins a una altra!.</p>

<p style="text-align: center;"><a href="https://www.box.com/s/s2oi1l7m4zhyvipv7kl6"><img class="alignnone size-full wp-image-2134" title="boton-thxou.com" src="http://www.thxou.com/wp-content/uploads/2011/11/boton-thxou.png" alt="" width="256" height="52" /></a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programant Per iOS: Patró De Disseny MVC Al Detall]]></title>
    <link href="http://ThXou.github.io/2012/10/05/programant-per-ios-patro-de-disseny-mvc-al-detall/"/>
    <updated>2012-10-05T15:14:14+02:00</updated>
    <id>http://ThXou.github.io/2012/10/05/programant-per-ios-patro-de-disseny-mvc-al-detall</id>
    <content type="html"><![CDATA[<p>Hola de nou readers!. He volgut canviar una mica el xip i centrar-me en el que més m'omple en aquest món de la informàtica: La programació. És per això que començo aquesta sèrie de posts dedicats a la programació per a diverses plataformes. En la qual més em vaig a centrar és en iOS per iPhone, iPod i iPad, ja que indagant una mica m'ha cridat moltíssim l'atenció, així que mantinguin-se al tant del blog que va a estar molt interessant.</p>

<p>Sense més que dir, comencem. Existeixen molts patrons de disseny per organitzar el codi i la forma de programar aplicacions. A la programació<strong> per iOS utilitzarem el MVC o Model View Controller (Model-Vista-Controlador)</strong>.</p>

<p>He volgut començar amb això perquè és un tema que, encara que a molts us ha estat fàcil d'entendre, al meu no, així que ho faré que sigui el més comprensible possible perquè no hagin de tornar a llegir sobre aquest tema en el futur.</p>

<p>Principalment consisteix a dividir la teva aplicació en aquestes 3 capes. Cada classe que escriguis, botó que posis en el <em>Interface Builder</em>, o tros de codi que hagis d'escriure, va a pertànyer a alguna d'aquestes 3 capes.</p>

<p style="text-align: center;"><img class="alignnone  wp-image-2118" title="MVC" src="http://www.thxou.com/wp-content/uploads/2011/11/MVC.png" alt="MVC-thxou.com" width="430" height="360" /></p>


<p><strong>La Vista</strong> és tot el que pots veure de l'aplicació i amb la qual l'usuari pot interactuar, dins d'aquesta trobem els botons, labels, camps de text, etc; en general, la majoria dels objectes que són subclasses de <code>UIView</code> (També les classes predefinides per l'usuari).</p>

<p><strong>El Model</strong> inclou objectes que ens permeten emmagatzemar i manipular dades. Això no té res a veure amb la interfície d'usuari i li diu a l'aplicació com dur a terme tal o com tasca, o també que característiques van a tenir certs objectes.</p>

<p><strong>El Controlador</strong> és el cervell d'aquest patró de disseny. El va a fer treballar a la vista i el model en sincronització perquè puguis veure coses en la pantalla o perquè en pressionar un botó, sigui efectuada alguna acció.</p>

<p>El MVC s'entén millor si mirem la imatge:</p>

<ul>
    <li>L'usuari interactua amb l'aplicació i la vista (O objecte de la vista) a través de la interfície d'usuari.</li>
    <li>La vista li envia un missatge al controlador dient-li per exemple que hem pressionat un botó i volem que això respongui a alguna acció.</li>
    <li>El controlador rep el missatge i contacta amb el model per realitzar l'acció i actualitzar la informació pertinent.</li>
    <li>El controlador recull la informació requerida per la vista però actualitzada pel model i per ultimo actualitza la vista amb els canvis que  s'han fet en el model.</li>
</ul>


<p>Senzill veritat?. Si t'adones el model no contacta directament amb el controlador, sinó que és aquest qui manipula i interpreta les dades del model, els recull i procedeix a actualitzar la vista.</p>

<p>És molt necessari tenir en compte les següents regles:</p>

<ul>
    <li>El controlador pot comunicar-se amb el Model i la Vista directament.</li>
    <li>La capa Modelo i la capa Vista no es poden comunicar entre si.</li>
    <li>La capa Vista no es comunica directament amb el controlador, però si interactuen d'alguna forma, a través d'accions com veurem una mica més endavant en aquesta entrada.</li>
    <li>El Model no es pot comunicar directament amb el seu el Controlador, però si poden comunicar-se amb altres capes Modelo d'altres MVC.</li>
    <li>Pot existir també comunicació entre diferents Controladors.</li>
</ul>


<p>Si alteres alguna d'aquestes regles ja no existiria el patró de disseny MVC.</p>

<h2>Aplicació pràctica</h2>


<p>Com tot el que s'aprèn a nivell practico s'aprèn més ràpid i millor, he creat un projecte molt simple per explicar una mica aquest patró de disseny <em>MVC, aquesta </em>mini aplicació mostra per pantalla 2 textos en pressionar un botó. Pots descarregar el projecte des del botó al final d'aquesta entrada i seguir-ho juntament amb aquest tutorial.</p>

<p>En obrir el projecte veuràs en el panell de més a la teva esquerra (<em>Project Navigator</em>: És important que et vagis quedant amb aquests noms) la llista dels arxius que componen el teu projecte. El que salta a simple vista és una classe anomenada <strong>MVCAppDelegate.h i .m</strong> (AppDelegate.h si uses XCode 4.2 o superior). Aquesta classe és el controlador de l'aplicació i s'encarrega de carregar la vista per defecte i l'aplicació en si. Bé, si obrim el AppDelegate.h veurem això si uses XCode 4.2:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">import</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">UIKit</span><span class="o">/</span><span class="n">UIKit</span><span class="p">.</span><span class="n">h</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@class</span> <span class="nc">ViewController</span>;<span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@interface</span> <span class="nc">AppDelegate</span> : <span class="nc">UIResponder</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">UIApplicationDelegate</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">UIWindow</span> <span class="o">*</span><span class="n">window</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">ViewController</span> <span class="o">*</span><span class="n">viewController</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>De moment anem a deixar de costat algunes coses d'aquest codi perquè les explicaré en entrades posteriors.</p>

<p>Ja podem començar a identificar objectes. <code>UIWindow </code>és una classe pertanyent al UIKit Framework i que defineix un objecte finestra (En aquest cas la variable d'instància <code>window</code>) de la interfície d'usuari (D'aquí les inicials <strong>&ldquo;UI&rdquo; de User Interface</strong>). Cada aplicació va a tenir en general un sol objecte d'aquests. Per això aquest objecte, a l'ésser de la interfície d'usuari, pertany a la part de la Vista del MVC.</p>

<p>Si tornem al <em>Project Navigator</em> veurem una classe anomenada &ldquo;ViewController&rdquo;. Com el seu mateix nom ho indica és un controlador, i és per a una vista específica, en aquest cas la vista principal que veuràs en arrencar l'aplicació.
[nota]
<strong>NOTA:</strong> Pel que fa als noms per als controladors, és molt recomanable que el nom inclogui al final les paraules &ldquo;<strong>Controller</strong>&rdquo; o &ldquo;<strong>View Controller</strong>&rdquo; ja que això et va a permetre organitzar millor la teva <em>Project Navigator</em> i situar més ràpid els teus fitxers per editar-los. En general (per no dir sempre) et vas a trobar amb projectes en què els controladors tenen noms com: ListasViewController o GameController. Si són projectes molt grans, vas a agrair que es nomenin els controladors d'aquesta manera, t'embolicaràs menys :). <strong></strong>
[/nota]
Obrim el fitxer de capçalera del nostre controlador: MVCViewController.h, i veurem el següent codi:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">import</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">UIKit</span><span class="o">/</span><span class="n">UIKit</span><span class="p">.</span><span class="n">h</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@interface</span> <span class="nc">MVCViewController</span> : <span class="nc">UIViewController</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">textos</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">IBOutlet</span> <span class="n">UILabel</span> <span class="o">*</span><span class="n">texto1</span><span class="p">;</span>
</span><span class='line'><span class="kt">IBOutlet</span> <span class="n">UILabel</span> <span class="o">*</span><span class="n">texto2</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;</span><span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nl">mostrarTextos:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sender</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>El Model sol utilitzar objectes de col·lecció com els <code>NSArray</code> o <code>NSDictionary</code> o els tipus com <code>NSString</code> o <code>NSNumber</code>, en la nostra aplicació podem identificar com a part del model a l'objecto textos de la classe <code>NSMutableArray</code>. També tenim 2 objectes <code>UILabel</code> que corresponen a la interfície d'usuari i formen part de la capa Vista. Els noms de les classes personalitzades per a la Vista solen acabar amb la paraula &ldquo;<strong>View</strong>&rdquo; com per exemple: GhaphicView, i això per la mateixa raó que per als controladors. Aquests també pertanyen a la capa Vista.</p>

<p>La comunicació entre la capa controlador i la capa vista és cega. Com pots veure en el codi, als <code>UILabel</code> els precedeix una macro cridada <code>IBOutlet</code>, aquesta els permet connectar-se amb el controlador per així poder enviar-li accions. Els objectes de la vista no tenen control sobre que fer sobre si, així que envien accions al controlador quan alguna cosa succeeix, per exemple quan es pressiona un botó com en el nostre cas amb el mètode: <code>mostrarTextos:sender</code>.</p>

<p>De vegades, la capa Vista necessita respondre a certs esdeveniments com per exemple quan un camp de text s'ha començat a editar. Com la Vista no té control sobre si mateixa, necessita del controlador perquè respongui per ella, llavors el controlador s'assigna a si mateix com a delegat (Veurem aquests conceptes més endavant) de la vista (Tot això a través de protocols) i si està preparat per respondre (Té els mètodes adequats correctament implementats), llavors respon.</p>

<p>Si obrim el fitxer d'implementació: MVCViewController.m, podrem veure el mètode <code>mostrarTextos:sender:</code>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// mètode que va a mostrar els textos</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nl">mostrarTextos:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sender</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// inicialitzem en un array els 2 textos a mostrar</span>
</span><span class='line'><span class="n">textos</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSMutableArray</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithObjects:</span><span class="s">@&quot;Texto de ejemplo para MVC&quot;</span><span class="p">,</span> <span class="s">@&quot;MVC mola cuando lo entiendes&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">txt1</span> <span class="o">=</span> <span class="p">[</span><span class="n">textos</span> <span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">txt2</span> <span class="o">=</span> <span class="p">[</span><span class="n">textos</span> <span class="nl">objectAtIndex:</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">texto1</span> <span class="nl">setText:</span><span class="n">txt1</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">texto2</span> <span class="nl">setText:</span><span class="n">txt2</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>En pressionar-se el botó s'executa l'acció <code>mostrarTextos:sender:</code> (En realitat s'envia un missatge, que és un concepte nou en Objective-C). En aquesta acció el controlador pren les dades que té disponibles la capa Model, en aquest cas la informació carregada en l'objecte <code>NSMutableArray</code> anomenat textos i llavors assigna els valors recollits en variables temporals i les retorna a la vista perquè els textos siguin mostrats. L'objecte <code>UILabel</code> sap mostrar text, però NO SAP que text mostrar, d'igual manera el <code>NSMutableArray</code> sap emmagatzemar dades, però NO SAP que dades ha d'emmagatzemar, és per això que usem el controlador per a això.</p>

<p>Recorda respectar les regles del MVC i així les teves aplicacions estaran ben estructurades, de manera que quan comparteixis el teu codi, aquest es pugui entendre millor.</p>

<p>Espero haver-los ajudat. Si m'ha faltat alguna cosa, solament comenteu-ho. Pots descarregar els arxius del tutorial pressionant el botó d'a baix.</p>

<p style="text-align: center;"><a href="http://securelink.thxou.com/?https://www.box.com/s/26lmhu53g5hnzubajfuh"><img class="alignnone size-full wp-image-2134" title="boton-thxou.com" src="http://www.thxou.com/wp-content/uploads/2011/11/boton-thxou.png" alt="" width="256" height="52" /></a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Treballant Amb El Social Framework De iOS 6: SLRequest, Publicar en Twitter I Obtenir El Timeline]]></title>
    <link href="http://ThXou.github.io/2012/09/20/trabajando-con-el-social-framework-de-ios-6-publicar-en-twitter-y-obtener-el-timeline/"/>
    <updated>2012-09-20T16:57:56+02:00</updated>
    <id>http://ThXou.github.io/2012/09/20/trabajando-con-el-social-framework-de-ios-6-publicar-en-twitter-y-obtener-el-timeline</id>
    <content type="html"><![CDATA[<p style="text-align: center;"><a href="http://www.thxou.com/wp-content/uploads/2012/09/Screen-Shot-2012-09-20-at-14.23.29.png"><img class="size-full wp-image-2359" title="totweet-thxou.com" src="http://www.thxou.com/wp-content/uploads/2012/09/Screen-Shot-2012-09-20-at-14.23.29.png" alt="" width="319" height="479" /></a></p>


<p>Seguint amb els tutorials sobre iOS 6, avui ens toca Twittear (o com s'escrigui) i mostrar el nostre timeline de Twitter en una aplicació.</p>

<p>Abans quan volíem comunicar-nos amb Twitter i obtenir dades i actualitzar-los calia fer una connexió a través de OAuth amb uns tokens i secret-keys, això normalment es podia digerir millor usant algun framework o classe externa que servia d'interfície de connexió entre el client i el servei. Des de l'arribada del framework de Twitter i la integració amb iOS 5 les coses es van posar extraordinàriament més fàcils, això ens va permetre l'intercanvi de dades amb Twitter en tan sol pocs passos.</p>

<p>En el Social *Framework tenim una classe anomenada <code>SLRequest</code>, molt similar a <code>TWRequest</code> del framework de twitter. Aquesta classe encapsula les propietats d'una petició HTTP en mètodes fàcils d'utilitzar, amb els quals enviem peticions a Twitter per poder obtenir i actualitzar dades dels nostres comptes configurats en el dispositiu.</p>

<p>Bàsicament enviem una petició HTTP amb uns paràmetres que configuren el que volem dur a terme en el servei, si Twitter diu que no hi ha problema, rebem una resposta amb unes dades que hem de manipular i mostrar a l'usuari, en cas contrari rebem una informació d'error.</p>

<h2>Autenticant la petició</h2>


<p>Com els deia paràgrafs enrere, abans calia usar tokens i secret-keys per autenticar-nos en Twitter i així poder validar les nostres peticions. Amb el Social Framework fem el mateix però de forma automàtica, més transparent a l'usuari, i en certa forma al desenvolupador, ja que en cap moment hem de manipular tokens.</p>

<p>Des de iOS 5 tenim el Accounts Framework, el qual proveeix un sistema centralitzat de comptes d'usuari. A través de l'es emmagatzemen tots els comptes de Twitter (I d'altres serveis) configurades en el dispositiu: informació d'usuari i contrasenya i altra, això ens permet saltar-nos aquesta típica finestra d'inici de sessió sense haver de preocupar-nos per proveir un sistema per emmagatzemar nosaltres mateixos les credencials.</p>

<p>Hi ha poques coses que podem fer sense autenticació d'usuari, i obtenir el timeline és una d'elles. No obstant això, per fer que això funcioni amb qualsevol compte, centralitzarem totes les peticions en els comptes obtinguts de la base de dades de comptes del dispositiu. Comencem:</p>

<p>El primer serà importar els frameworks:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">import</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">Accounts</span><span class="o">/</span><span class="n">Accounts</span><span class="p">.</span><span class="n">h</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">import</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">Social</span><span class="o">/</span><span class="n">Social</span><span class="p">.</span><span class="n">h</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Després fem la màgia d'obtenir els comptes del dispositiu amb el Accounts Framework:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">ACAccountStore</span><span class="err"> </span><span class="o">*</span><span class="n">accountStore</span><span class="err"> </span><span class="o">=</span> <span class="p">[[</span><span class="n">ACAccountStore</span><span class="err"> </span><span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// creguem un objecte accountType especificant que solament volem obtenir els comptes de Twitter</span>
</span><span class='line'><span class="n">ACAccountType</span><span class="err"> </span><span class="o">*</span><span class="n">accountType</span><span class="err"> </span><span class="o">=</span> <span class="p">[</span><span class="n">accountStore</span><span class="err"> </span><span class="nl">accountTypeWithAccountTypeIdentifier:</span><span class="n">ACAccountTypeIdentifierTwitter</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">[</span><span class="n">accountStore</span><span class="err"> </span><span class="nl">requestAccessToAccountsWithType:</span><span class="n">accountType</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                                  <span class="nl">options:</span><span class="nb">nil</span>
</span><span class='line'>                               <span class="nl">completion:</span><span class="o">^</span><span class="p">(</span><span class="kt">BOOL</span><span class="err"> </span><span class="n">granted</span><span class="p">,</span> <span class="n">NSError</span><span class="err"> </span><span class="o">*</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span><span class="err"> </span><span class="p">(</span><span class="n">granted</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// guardem els comptes de twitter en un array </span>
</span><span class='line'>    <span class="n">NSArray</span><span class="err"> </span><span class="o">*</span><span class="n">accountsArray</span><span class="err"> </span><span class="o">=</span> <span class="p">[</span><span class="n">accountStore</span><span class="err"> </span><span class="nl">accountsWithAccountType:</span><span class="n">accountType</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// armem la petició aquí</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span><span class="err"> </span><span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Error no se pudo acceder a las cuentas: %@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">error</span> <span class="n">localizedDescription</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>El que fem aquí és crear una instància de la base de dades de comptes. Després a través de la classe <code>ACAccountType</code> diem que solament volem els comptes de Twitter, passant-li la constant  <code>ACAccountTypeIdentifierTwitter</code> com a argument en la inicialització. Tot seguit demanem accés a les comptes amb el mètode <code>requestAccessToAccountsWithType:options:completion:</code>. Aquest mètode té com a argument el bloc <code>completion:</code>, el qual és un handler (Un objecte &ldquo;manipulador&rdquo; per així dir-ho) en els paràmetres del qual és retornada la resposta del mètode. Si tot va bé emmagatzemem tots els comptes obtinguts en el array <code>accountsArray</code> o vam mostrar un error en cas contrari. Simple.</p>

<p>Recorda aquesta dinàmica d'executar un mètode i rebre una resposta per ser manipulada en un bloc, perquè ho veuràs molt sovint des d'ara.</p>

<h2>Construint la petició per obtenir el timeline</h2>


<p>Amb el Social Framework és definitivament molt més fàcil construir una petició HTTP. Sabem que està composta per:</p>

<ol>
    <li>Una URL que identifica l'operació que volem realitzar en el servei.</li>
    <li>Un mètode de petició, que pot ser GET, POST o DELETE.</li>
    <li>I uns paràmetres de configuració.</li>
</ol>


<p>El mètode <code>requestForServiceType:requestMethod:URL:parameters:</code> passa totes aquestes dades com els seus arguments i això ens permet crear la petició en tan sol una línia de codi si així ho desitgem.</p>

<p>El que nosaltres volem és obtenir el timeline, per tant necessitem anar a la <a title="Versión 1.1 de la API de Twitter" href="http://securelink.thxou.com/?https://dev.twitter.com/docs/api/1.1" target="_blank">documentació oficial</a> per veure el que hem d'usar. En entrar en l'enllaç i seleccionar l'operació de la qual volem veure els detalls (en aquest cas és: <code>GET</code> <code>statuses/home_timeline</code>), veurem en l'apartat <strong>Resourse Information</strong> certa informació molt important:</p>

<p style="text-align: center;"><img class="size-full wp-image-2326 aligncenter" title="twitter-thxou.com" src="http://www.thxou.com/wp-content/uploads/2012/09/Screen-Shot-2012-09-11-at-17.08.28.png" alt="" width="249" height="392" /></p>


<p>Tenim el mètode de la petició (GET), el format de resposta (JSON) i l'objecte de resposta (Tweets). Després està l'apartat <strong>Resource URL</strong> que és la URL que li passarem i l'apartat <strong>Parameters</strong>, que conté els paràmetres per configurar-la. Usant aquesta informació construïm la petició:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// guardem el compte</span>
</span><span class='line'><span class="n">ACAccount</span><span class="err"> </span><span class="o">*</span><span class="n">twitterAccount</span><span class="err"> </span><span class="o">=</span> <span class="p">[</span><span class="n">accountsArray</span><span class="err"> </span><span class="nl">objectAtIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">cuenta</span> <span class="o">=</span> <span class="n">twitterAccount</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// creguem la petició</span>
</span><span class='line'><span class="n">NSURL</span><span class="err"> </span><span class="o">*</span><span class="n">url</span><span class="err"> </span><span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span><span class="err"> </span><span class="nl">URLWithString:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;https://api.twitter.com/1.1/statuses/home_timeline.json&quot;</span><span class="o">&gt;</span><span class="nl">https:</span><span class="c1">//api.twitter.com/1.1/statuses/home_timeline.json&lt;/a&gt;&amp;rdquo;];&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">NSDictionary</span><span class="err"> </span><span class="o">*</span><span class="n">parametros</span><span class="err"> </span><span class="o">=</span> <span class="p">[</span><span class="n">NSDictionary</span><span class="err"> </span><span class="nl">dictionaryWithObjectsAndKeys:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                            <span class="s">@&quot;25&quot;</span><span class="p">,</span> <span class="s">@&quot;count&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">SLRequest</span> <span class="o">*</span><span class="n">request</span><span class="err"> </span><span class="o">=</span> <span class="p">[</span><span class="n">SLRequest</span> <span class="nl">requestForServiceType:</span><span class="n">SLServiceTypeTwitter</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>                                    <span class="nl">requestMethod:</span><span class="n">SLRequestMethodGET</span>
</span><span class='line'>                                              <span class="nl">URL:</span><span class="n">url</span>
</span><span class='line'>                                       <span class="nl">parameters:</span><span class="n">parametros</span><span class="p">];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">// associem el compte a la petició</span>
</span><span class='line'><span class="p">[</span><span class="n">request</span><span class="err"> </span><span class="nl">setAccount:</span><span class="n">twitterAccount</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Per motius de brevetat tan solament utilitzarem el primer compte de les quals hi ha en el array.</p>

<p>He creat la propietat <code>cuenta</code> de tipus <code>ACAccount</code>, en ella emmagatzemem aquest compte per posteriorment poder enviar-la al controlador des del qual publicarem un missatge d'estat (el que és un Tweet) al nostre timeline, això més endavant.</p>

<p>Com poden veure tenim un diccionari per als paràmetres. El meu solament té una key: <code>count</code>, aquesta ens permet limitar la quantitat de tweets que ens va a retornar el timeline que per defecte és 20, però jo l'he posat a 25. En la documentació de la API estan tots els paràmetres que podem usar per configurar la petició.</p>

<p>El següent és assignar-li a la propietat <code>account</code> de la nostra petició, el compte que hem triat del array i amb la qual volem treballar per mostrar el timeline i altres coses.</p>

<h2>Enviant la petició i manipulant els resultats</h2>


<p>Una vegada construïda la petició procedim a enviar-la. Per a això usem el mètode <code>performRequestWithHandler:</code> que envia la petició i recull els resultats en el seu únic argument. Est és al seu torn un bloc, el qual és executat una vegada estan disponibles les dades de la resposta.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// realitzem la petició especificant un mètode per manipular la resposta</span>
</span><span class='line'><span class="p">[</span><span class="n">request</span><span class="err"> </span><span class="nl">performRequestWithHandler:</span><span class="o">^</span><span class="p">(</span><span class="n">NSData</span><span class="err"> </span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">responseData</span><span class="p">,</span> <span class="n">NSHTTPURLResponse</span><span class="err"> </span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">urlResponse</span><span class="p">,</span> <span class="n">NSError</span><span class="err"> </span><span class="o">*</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span><span class="err"> </span><span class="p">(</span><span class="n">responseData</span><span class="err"> </span><span class="o">!=</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">tweets</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSJSONSerialization</span><span class="err"> </span><span class="nl">JSONObjectWithData:</span><span class="n">responseData</span>
</span><span class='line'>                                                  <span class="nl">options:</span><span class="n">kNilOptions</span>
</span><span class='line'>                                                    <span class="nl">error:</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">amp</span><span class="p">;</span><span class="n">error</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Aquest bloc té 3 paràmetres, el més important és <code>responseData</code>, perquè és el que va a contenir els tweets. Aquests tweets estan en format JSON com vam veure abans, per tant necessitem parsearlos i així passar-los a un format manipulable en Objective-C. Per fer això existeix la classe <code>NSJSONSerialization</code>, que agafa les dades en <code>NSData</code> (en aquest cas <code>responseData</code>), els parsea i retorna. Aquestes dades retornades els emmagatzemem en el array <code>tweets</code>, que a continuació usarem per mostrar-los a l'usuari.</p>

<p>[tip]Pots aprendre més sobre com parsear dades en format JSON i la classe <code>NSJSONSerialization</code> en el nostre pràctic tutorial sobre el tema fent <a href="http://www.thxou.com/2012/09/11/parsear-y-crear-ficheros-en-formato-json-en-ios/"><strong>clic aquí</strong></a>.[/tip]</p>

<h2>Mostrant els resultats</h2>


<p>Bé, ja tenim fet gairebé tot el treball, ara solament ens queda mostrar els resultats, i para això tenim l'objecte <code>tweetsTableView</code>. A causa que ja tenim tots els Tweets en un array, és relativament senzill mostrar-los en el tableView, per això anem directament a implementar els mètodes convenients:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nl">numberOfSectionsInTableView:</span><span class="p">(</span><span class="n">UITableView</span><span class="err"> </span><span class="o">*</span><span class="p">)</span><span class="n">tableView</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">return</span><span class="err"> </span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nl">tableView:</span><span class="p">(</span><span class="n">UITableView</span><span class="err"> </span><span class="o">*</span><span class="p">)</span><span class="n">tableView</span><span class="err"> </span><span class="nl">numberOfRowsInSection:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="n">section</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span><span class="err"> </span><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">tweets</span> <span class="n">count</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="n">UITableViewCell</span><span class="err"> </span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="nl">tableView:</span><span class="p">(</span><span class="n">UITableView</span><span class="err"> </span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">tableView</span><span class="err"> </span><span class="nl">cellForRowAtIndexPath:</span><span class="p">(</span><span class="n">NSIndexPath</span><span class="err"> </span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">indexPath</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">static</span><span class="err"> </span><span class="n">NSString</span><span class="err"> </span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">CellIdentifier</span><span class="err"> </span><span class="o">=</span> <span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Cell</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;;</span>
</span><span class='line'>  <span class="n">UITableViewCell</span><span class="err"> </span><span class="o">*</span><span class="n">cell</span><span class="err"> </span><span class="o">=</span> <span class="p">[</span><span class="n">tableView</span><span class="err"> </span><span class="nl">dequeueReusableCellWithIdentifier:</span><span class="n">CellIdentifier</span><span class="p">];</span>
</span><span class='line'>  <span class="k">if</span><span class="err"> </span><span class="p">(</span><span class="n">cell</span><span class="err"> </span><span class="o">==</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="n">cell</span><span class="err"> </span><span class="o">=</span> <span class="p">[[[</span><span class="n">UITableViewCell</span><span class="err"> </span><span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithStyle:</span><span class="n">UITableViewCellStyleSubtitle</span><span class="err"> </span><span class="nl">reuseIdentifier:</span><span class="n">CellIdentifier</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="n">NSDictionary</span><span class="err"> </span><span class="o">*</span><span class="n">tweet</span><span class="err"> </span><span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">tweets</span> <span class="nl">objectAtIndex:</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="n">cell</span><span class="p">.</span><span class="n">textLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="p">[</span><span class="n">tweet</span><span class="err"> </span><span class="nl">objectForKey:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">text</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span>
</span><span class='line'>  <span class="n">cell</span><span class="p">.</span><span class="n">detailTextLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="p">[[</span><span class="n">tweet</span><span class="err"> </span><span class="nl">objectForKey:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;]</span> <span class="nl">objectForKey:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">screen_name</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="c1">// carreguem les imatges dels quals envien el tweet, de forma asíncrona</span>
</span><span class='line'>  <span class="n">dispatch_queue_t</span> <span class="n">queue</span><span class="err"> </span><span class="o">=</span> <span class="n">dispatch_queue_create</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">com</span><span class="p">.</span><span class="n">thxou</span><span class="p">.</span><span class="n">totweet</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>  <span class="n">dispatch_queue_t</span> <span class="n">main</span> <span class="o">=</span> <span class="n">dispatch_get_main_queue</span><span class="p">();</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="n">dispatch_async</span><span class="p">(</span><span class="n">queue</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>      <span class="n">NSURL</span><span class="err"> </span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">imageURL</span><span class="err"> </span><span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span><span class="err"> </span><span class="nl">URLWithString:</span><span class="p">[[</span><span class="n">tweet</span><span class="err"> </span><span class="nl">objectForKey:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">user</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;]</span> <span class="nl">objectForKey:</span><span class="err">@</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">profile_image_url</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;]];</span>
</span><span class='line'>      <span class="n">NSData</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">imageData</span><span class="err"> </span><span class="o">=</span> <span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfURL:</span><span class="n">imageURL</span><span class="p">];</span>
</span><span class='line'>      <span class="n">dispatch_async</span><span class="p">(</span><span class="n">main</span><span class="p">,</span> <span class="o">^</span><span class="p">{</span>
</span><span class='line'>          <span class="n">cell</span><span class="p">.</span><span class="n">imageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span><span class="err"> </span><span class="nl">imageWithData:</span><span class="n">imageData</span><span class="p">];</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="n">dispatch_release</span><span class="p">(</span><span class="n">queue</span><span class="p">);</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">return</span> <span class="n">cell</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
</ul>


<p>Aquí hi ha algunes línies que els sonaran a xinès, no obstant això explicaré una mica per damunt que està succeint.</p>

<p>Al parsearse les dades aquests són emmagatzemats en el array <code>tweets</code>, però els tweets dins del, són emmagatzemats en forma de diccionaris, fàcilment recuperables usant la classe <code>NSDictionary</code>. Llavors recuperem cada camp d'aquest array en un diccionari que jo he anomenat <code>tweet</code> per fer-ho més identificable (en realitat això és el que representa). Com ja saben, accedim als valors d'un diccionari a través de keys, però quines són aquestes keys?, ens anem a la <a href="https://dev.twitter.com/docs/platform-objects/tweets">documentació oficial</a> i ho mirem allí. El que fem és simplement mostrar el text del tweet com a títol i el nom &ldquo;del que tweetea&rdquo; com subtitulo en cada cel·la.</p>

<p>Per mostrar la imatge el que fem és usar el <strong>GCD</strong> (Grand Central Dispatch) d'Apple. A grans trets explicar-los que la descàrrega de dades de la xarxa sempre deuria ser de forma asíncrona, això és perquè és un procés que triga una mica a dur-se a terme i per tant no pot fer-se en el mateix thread (fil) ja que podem bloquejar-ho, i això deixaria inutilitzable la interfície d'usuari fins que es completi el procés, cosa que pel bé dels nostres usuaris, no volem. Doncs aquest problema ho soluciona el <strong>GCD</strong>, fent que certs mètodes s'executin de forma asíncrona (en un altre fil o thread), d'aquesta forma evitem bloquejar la interfície d'usuari.</p>

<h2>Enviant un tweet</h2>


<p>Doncs fer això és una mica més del mateix. Jo he creat un nou controlador per fer això anomenat <code>EnviarTweetViewController</code>, el qual es mostra en una finestra modal i té un TextView i dos botons: un per enviar el tweet i un altre per cancel·lar l'operació.</p>

<p>El d'enviar el tweet executa el mètode <code>enviarTweet:</code>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nl">enviarTweet:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="n">sender</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// comprovem si el camp per escriure el tweet no està buit</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">tweet</span><span class="p">.</span><span class="n">text</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;&quot;</span><span class="p">])</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="s">@&quot;https://api.twitter.com/1.1/statuses/update.json&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">parametros</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObjectsAndKeys:</span>
</span><span class='line'>                                <span class="n">self</span><span class="p">.</span><span class="n">tweet</span><span class="p">.</span><span class="n">text</span><span class="p">,</span> <span class="s">@&quot;status&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">SLRequest</span> <span class="o">*</span><span class="n">request</span> <span class="o">=</span> <span class="p">[</span><span class="n">SLRequest</span> <span class="nl">requestForServiceType:</span><span class="n">SLServiceTypeTwitter</span>
</span><span class='line'>                                            <span class="nl">requestMethod:</span><span class="n">SLRequestMethodPOST</span>
</span><span class='line'>                                                      <span class="nl">URL:</span><span class="n">url</span>
</span><span class='line'>                                               <span class="nl">parameters:</span><span class="n">parametros</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// assignem el compte que usarem per publicar el tweet</span>
</span><span class='line'>    <span class="p">[</span><span class="n">request</span> <span class="nl">setAccount:</span><span class="n">self</span><span class="p">.</span><span class="n">cuenta</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>     <span class="p">[</span><span class="n">request</span> <span class="nl">performRequestWithHandler:</span><span class="o">^</span><span class="p">(</span><span class="n">NSData</span> <span class="o">*</span><span class="n">responseData</span><span class="p">,</span> <span class="n">NSHTTPURLResponse</span> <span class="o">*</span><span class="n">urlResponse</span><span class="p">,</span> <span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>     <span class="p">{</span>
</span><span class='line'>         <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">resultado</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSJSONSerialization</span> <span class="nl">JSONObjectWithData:</span><span class="n">responseData</span>
</span><span class='line'>                                                                   <span class="nl">options:</span><span class="n">kNilOptions</span>
</span><span class='line'>                                                                     <span class="nl">error:</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">amp</span><span class="p">;</span><span class="n">error</span><span class="p">];</span>
</span><span class='line'>     <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">cancelar:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Com podeu observar es fa exactament el mateix. Tan solament canvien els paràmetres, la URL i el mètode de la petició, i tot això el podem trobar en la documentació oficial.</p>

<p>A diferència de l'anterior, aquí no accedim a tots els comptes del dispositiu, sinó que simplement passem a aquest controlador el compte que hem obtingut abans, així ens assegurem que el compte que està seleccionada és des de la qual s'envia el tweet i sobre la qual es fan les operacions sol·licitades. No hi ha misteri.</p>

<h2>Conclusió</h2>


<p>El procediment per dur a terme totes aquestes accions en Twitter porten la mateixa estructura. Tan solament varien els paràmetres, la URL i el mètode de la petició. Pel que, si volem fer qualsevol cosa,  hem d'anar a la documentació i mirar el que necessitem. Després reemplaçar les dades que hem vist abans amb els nous, enviar la petició i mostrar a l'usuari les dades obtingudes. Així de fàcil és treballar amb el Social Framework.</p>

<p>Ara pots passar-te per la <a href="http://securelink.thxou.com/?https://developer.apple.com/library/ios/documentation/Social/Reference/SLRequest_Class/Reference/Reference.html#//apple_ref/doc/uid/TP40012234">documentació d'Apple</a> sobre aquest tema i també visitar el nostre tutorial sobre com parsear i manipular fitxers JSON de forma nativa i així estendre una mica més els teus coneixements.</p>

<p style="text-align: center;"><a href="http://securelink.thxou.com/?https://www.box.com/s/c0bb4xgyatv10t5nhvll"><img class="alignnone size-full wp-image-2134" title="boton-thxou.com" src="http://www.thxou.com/wp-content/uploads/2011/11/boton-thxou.png" alt="" width="256" height="52" /></a></p>

]]></content>
  </entry>
  
</feed>
